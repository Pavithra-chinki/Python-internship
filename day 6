#add +2 to every element in the list
list = [1, 3, 5, 7, 9, 11, 15, 18, 21]
for i in list:
    print(i+2)
  
  
#program to print a pattern
i=0
for i in range(5,0, -1): 
	for j in range(i, 0, -1): 
		print(j, end='') 
	print() 
  
  
#fibanocci sequence
terms = int(input("How many terms? "))
n1, n2 = 0, 1
count = 0
if terms <= 0:
   print("Please enter a positive integer")
elif terms == 1:
   print("Fibonacci sequence upto",terms,":")
   print(n1)
else:
   print("Fibonacci sequence:")
   while count < terms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
       
  
#amstrong number
num = int(input("Enter a number: "))
i = 0
temp = num
while temp > 0:
   digit = temp % 10
   i += digit ** 3
   temp //= 10
if num == i:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")


#multiplication table of 9
num = 9
print("Multiplication Table of", num)
for i in range(1, 11):
   print(num,"X",i,"=",num * i)
   
#check if positive or negative
num = float(input("Enter a number: "))
if num >0:
       print("Positive number")
else:
   print("Negative number") 
   
#convert days into age
days=int(input("Enter Days:"))
years =(int) (days / 365)
print("Days to age:",years)

#trignometry functions
import math
x=int(input("enter number"))
print("math.cos(",x,"):", math.cos(x));
print("math.sin(",x,"):", math.sin(x));
print("math.tan(",x,"):", math.tan(x));


#simple calculator program
print("Simple Calculator")
print("1.Add")
print("2.Substract")
print("3.Multiply")
print("4.Divide")
num=int(input("Enter Choice(1-4): "))
if num==1:
    a=int(input("Enter A:"))
    b=int(input("Enter B:"))
    c=a+b
    print("Sum = ",c)
elif num==2:
    a=int(input("Enter A:"))
    b=int(input("Enter B:"))
    c=a-b
    print("Difference = ",c)
elif  num==3:
    a=int(input("Enter A:"))
    b=int(input("Enter B:"))
    c=a*b
    print("Product = ",c)
elif num==4:
    a=int(input("Enter A:"))
    b=int(input("Enter B:"))
    c=a/b
    print("Quotient = ",c)
else:
    print("Invalid Choice")

